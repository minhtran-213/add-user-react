{"ast":null,"code":"var _jsxFileName = \"C:\\\\Document\\\\Learning\\\\Frontend\\\\react_project\\\\add-user\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styles from \"./AddUser.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport { useState, useRef } from \"react\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAGe = ageInputRef.current.value;\n    event.preventDefault();\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Input cannot be empty!\"\n      });\n      return;\n    }\n\n    if (+enteredAge < 0) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Input cannot be negative!\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredUsername, enteredAge);\n    setEnteredAge(\"\");\n    setEnteredUsername(\"\");\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Document/Learning/Frontend/react_project/add-user/src/components/Users/AddUser.js"],"names":["React","styles","Card","Button","useState","useRef","ErrorModal","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","enteredName","current","value","enteredUserAGe","preventDefault","enteredUsername","trim","length","enteredAge","title","message","onAddUser","setEnteredAge","setEnteredUsername","errorHandler","input"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAMK,WAAW,GAAGL,MAAM,EAA1B;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;;AAEA,QAAMS,cAAc,GAAIC,KAAD,IAAW;AAChC,UAAMC,WAAW,GAAGN,YAAY,CAACO,OAAb,CAAqBC,KAAzC;AACA,UAAMC,cAAc,GAAGR,WAAW,CAACM,OAAZ,CAAoBC,KAA3C;AACAH,IAAAA,KAAK,CAACK,cAAN;;AACA,QAAIC,eAAe,CAACC,IAAhB,GAAuBC,MAAvB,KAAkC,CAAlC,IAAuCC,UAAU,CAACF,IAAX,GAAkBC,MAAlB,KAA6B,CAAxE,EAA2E;AACzEV,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,KAAK,EAAE,eAAT;AAA0BC,QAAAA,OAAO,EAAE;AAAnC,OAAD,CAAR;AACA;AACD;;AACD,QAAI,CAACF,UAAD,GAAc,CAAlB,EAAqB;AACnBX,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,KAAK,EAAE,aAAT;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAAD,CAAR;AACA;AACD;;AACDjB,IAAAA,KAAK,CAACkB,SAAN,CAAgBN,eAAhB,EAAiCG,UAAjC;AACAI,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAfD;;AAiBA,QAAMC,YAAY,GAAG,MAAM;AACzBjB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,eACGD,KAAK,iBACJ,QAAC,UAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACa,KADf;AAEE,MAAA,OAAO,EAAEb,KAAK,CAACc,OAFjB;AAGE,MAAA,SAAS,EAAEI;AAHb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,KAAxB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEjB,cAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,GAAG,EAAIJ;AAHT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,GAAG,EAAIC;AAHT;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CArDD;;GAAMH,O;;KAAAA,O;AAuDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport styles from \"./AddUser.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport { useState, useRef } from \"react\";\r\nimport ErrorModal from \"../UI/ErrorModal\";\r\nconst AddUser = (props) => {\r\n  const nameInputRef = useRef();\r\n  const ageInputRef = useRef();\r\n  const [error, setError] = useState();\r\n\r\n  const addUserHandler = (event) => {\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredUserAGe = ageInputRef.current.value;\r\n    event.preventDefault();\r\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\r\n      setError({ title: \"Invalid input\", message: \"Input cannot be empty!\" });\r\n      return;\r\n    }\r\n    if (+enteredAge < 0) {\r\n      setError({ title: \"Invalid age\", message: \"Input cannot be negative!\" });\r\n      return;\r\n    }\r\n    props.onAddUser(enteredUsername, enteredAge);\r\n    setEnteredAge(\"\");\r\n    setEnteredUsername(\"\");\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n  return (\r\n    <div>  \r\n      {error && (\r\n        <ErrorModal\r\n          title={error.title}\r\n          message={error.message}\r\n          onConfirm={errorHandler}\r\n        />\r\n      )}\r\n      <Card className={styles.input}>\r\n        <form onSubmit={addUserHandler}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            ref = {nameInputRef}\r\n          />\r\n          <label htmlFor=\"age\">Age</label>\r\n          <input\r\n            id=\"age\"\r\n            type=\"number\"\r\n            ref = {ageInputRef}\r\n          />\r\n          <Button type=\"submit\">Add user</Button>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}